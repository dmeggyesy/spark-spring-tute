plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.17'
    //  id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'li.zah'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


//configurations.configureEach {
// exclude group: 'org.apache.logging', module: 'slf4j'
//    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//  exclude group: 'org.slf4j', module: 'slf4j-api'
// exclude group: 'ch.qos.logback', module: 'logback-classic'
//}
//ext['jakarta-servlet.version'] = '6.0.0'
//ext['jersey.version'] = '3.1.3'


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    implementation 'org.apache.spark:spark-core_2.12:3.5.0'
    implementation 'org.apache.spark:spark-sql_2.12:3.5.0'

    compileOnly 'org.projectlombok:lombok'
 //   developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}



tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

bootRun {
    def sparkJava17CompatibleJvmArgs = [
            "--add-opens=java.base/java.lang=ALL-UNNAMED",
            "--add-opens=java.base/java.lang.invoke=ALL-UNNAMED",
            "--add-opens=java.base/java.lang.reflect=ALL-UNNAMED",
            "--add-opens=java.base/java.io=ALL-UNNAMED",
            "--add-opens=java.base/java.net=ALL-UNNAMED",
            "--add-opens=java.base/java.nio=ALL-UNNAMED",
            "--add-opens=java.base/java.util=ALL-UNNAMED",
            "--add-opens=java.base/java.util.concurrent=ALL-UNNAMED",
            "--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED",
            "--add-opens=java.base/sun.nio.ch=ALL-UNNAMED",
            "--add-opens=java.base/sun.nio.cs=ALL-UNNAMED",
            "--add-opens=java.base/sun.security.action=ALL-UNNAMED",
            "--add-opens=java.base/sun.util.calendar=ALL-UNNAMED",
            "--add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED"]

    jvmArgs = sparkJava17CompatibleJvmArgs
}

shadowJar {
    zip64 true
}